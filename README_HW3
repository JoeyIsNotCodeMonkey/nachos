In this assignment, we implemented different CPU scheduling.

Even though, in the original version of Nachos, only preemptive scheduling will start the timer,
but for the purpose of estimating current system tick, we have permanently set the timer to true 
so we can get the current system time in case if any scheduling requires information about current system time.

When we write our test driver class, we create a while loop and initially set the count to 0, this represents 
the number of processes that we will generate during the testing. Usually, we set the count to 100 and collect data for the graph.

The C test program(hw3_schedulertest1) will take the number_of_iteration that is randomly generated by our test driver and execute 
for about 10 times the iteration.   